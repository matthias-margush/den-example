#!/bin/sh

usage() {
  echo "Usage: provision-db-role DATABASE ROLE PRIVILEGES" >&2
  exit 1
}

db="$1"
shift
if [ "$db" == "" ]
then
  usage
fi

vault_role="$1"
shift
if [ "$vault_role" == "" ]
then
  usage
fi

privileges="$1"
shift
if [ "$privileges" == "" ]
then
  usage
fi

db_roles="$*"

kubectl exec -i svc/vault -- sh -x <<EOF
  vault secrets list | grep -q database || vault secrets enable database

  allowed=\$(vault read -field allowed_roles -format=json "database/config/$db" | tr -d '[]"')
  if [ "\$allowed" != "" ]
  then
    allowed="\${allowed}, $vault_role"
  else
    allowed="$vault_role"
  fi

  vault kv get secret/db-vault
  export PGUSER=\$(vault kv get -field PGUSER "secret/$db-vault")
  export PGPASSWORD=\$(vault kv get -field PGPASSWORD "secret/$db-vault")
  vault write "database/config/$db" \
      plugin_name=postgresql-database-plugin \
      allowed_roles="\$allowed" \
      connection_url="postgresql://{{username}}:{{password}}@${db}:5432/?sslmode=disable" \
      username="$PGUSER" \
      password="\$PGPASSWORD"
EOF

kubectl exec -i svc/vault -- sh -x <<EOF
  vault secrets list | grep -q database || vault secrets enable database
  vault write "database/roles/$vault_role" \
      db_name=$db \
      creation_statements="\
        CREATE ROLE \"{{name}}\" \
          WITH ENCRYPTED PASSWORD '{{password}}' VALID UNTIL '{{expiration}}' \
          LOGIN $db_roles; \
        GRANT $privileges ON ALL TABLES IN SCHEMA public TO \"{{name}}\";" \
      default_ttl="1h" \
      max_ttl="24h"
EOF

